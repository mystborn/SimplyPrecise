"""init

Revision ID: b4ca15ccfd41
Revises: 
Create Date: 2019-09-07 19:12:23.459331

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = 'b4ca15ccfd41'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_title'), 'tag', ['title'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('about_me', sa.Text(), nullable=True),
    sa.Column('level', sa.Enum('normal', 'moderator', 'admin', name='userlevel'), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.Unicode(length=255), nullable=True),
    sa.Column('slug', sa.Text(), nullable=True),
    sa.Column('summary', sa.UnicodeText(), nullable=True),
    sa.Column('html_body', sa.UnicodeText(), nullable=True),
    sa.Column('markdown_body', sa.UnicodeText(), nullable=True),
    sa.Column('date_published', sa.DateTime(), nullable=True),
    sa.Column('date_edited', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('search_vector', sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_date_published'), 'post', ['date_published'], unique=False)
    op.create_index('ix_post_search_vector', 'post', ['search_vector'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_post_slug'), 'post', ['slug'], unique=False)
    op.create_table('tags',
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tags')
    op.drop_index(op.f('ix_post_slug'), table_name='post')
    op.drop_index('ix_post_search_vector', table_name='post')
    op.drop_index(op.f('ix_post_date_published'), table_name='post')
    op.drop_table('post')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_tag_title'), table_name='tag')
    op.drop_table('tag')
    op.execute('DROP TYPE public.userlevel')
    # ### end Alembic commands ###
